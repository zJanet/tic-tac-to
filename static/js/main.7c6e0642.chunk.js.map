{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","_this","this","squares","renderSquare","React","Component","Game","_this2","Object","_Users_user_Desktop_studyReact_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_user_Desktop_studyReact_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_user_Desktop_studyReact_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","_lines$i","_Users_user_Desktop_studyReact_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c6e0642.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n  function Square(props) {\n      return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n      );\n  }\n  class Board extends React.Component {\n    // constructor(props) {\n    //   super(props);\n    //   this.state = {\n    //     squares: Array(9).fill(null),\n    //     xIsNext: true,\n    //   };\n    // }\n  \n    // handleClick(i) {\n    //   const squares = this.state.squares.slice();\n    //   if (claculateWinner(squares) || squares[i]) {\n    //       return;\n    //   }\n    //   squares[i] = this.state.xIsNext ? 'X' : 'O';\n    //   this.setState({\n    //       squares: squares,\n    //       xIsNext: !this.state.xIsNext,\n    //     });\n    // }\n  \n    renderSquare(i) {\n      return (\n        <Square\n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n  \n    render() {\n    //   const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    //   const winner = claculateWinner(this.state.squares);\n    //   let status;\n    //   if (winner) {\n    //       status = 'Winner: ' + winner;\n    //   } else {\n    //       status = 'Next player ' + (this.state.xIsNext ? 'X' : 'O');\n    //   }\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null)\n            }],\n            stepNumber: 0,\n            xIsNext: true\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n          });\n      }\n\n    jumpTo(step) {\n       this.setState({\n         stepNumber: step,\n         xIsNext: (step % 2) === 0,\n       });\n    }\n\n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n          const desc = move ?\n            'Go to move #' + move :\n            'Go to game start';\n          return (\n              <li key={move}>\n                  <button onClick={() => this.jumpTo(move)}>{desc}</button>\n              </li>\n          );\n      });\n\n      let status;\n      if (winner) {\n          status = 'Winner: ' + winner;\n      } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n\n  function calculateWinner(squares) {\n      const lines = [\n          [0, 1, 2],\n          [3, 4, 5],\n          [6, 7, 8],\n          [0, 3, 6],\n          [1, 4, 7],\n          [2, 5, 8],\n          [0, 4, 8],\n          [2, 4, 6],\n      ];\n      for (let i = 0; i < lines.length; i++) {\n          const [a, b, c] = lines[i];\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n              return squares[a];\n          }\n      }\n      return null;\n  }\n  "],"sourceRoot":""}